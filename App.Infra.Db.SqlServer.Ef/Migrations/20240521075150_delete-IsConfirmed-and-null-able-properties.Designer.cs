// <auto-generated />
using System;
using App.Infra.Db.SqlServer.Ef.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Infra.Db.SqlServer.Ef.Migrations
{
    [DbContext(typeof(HomeServiceDbContext))]
    [Migration("20240521075150_delete-IsConfirmed-and-null-able-properties")]
    partial class deleteIsConfirmedandnullableproperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.Domain.Core.Admin.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("SignUpDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "ادمین",
                            IsDeleted = false,
                            LastName = "ادمینیان پور",
                            ProfileImage = "/UserAssets/img/admin/1.jpg",
                            SignUpDate = new DateTime(2024, 5, 21, 0, 51, 49, 360, DateTimeKind.Local).AddTicks(8561)
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Admin.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExpertId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9714),
                            IsDeleted = false,
                            Name = "آذربایجان شرقی",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9727),
                            IsDeleted = false,
                            Name = "آذربایجان غربی",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9729),
                            IsDeleted = false,
                            Name = "اردبیل",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9732),
                            IsDeleted = false,
                            Name = "اصفهان",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9734),
                            IsDeleted = false,
                            Name = "البرز",
                            ProvinceId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9736),
                            IsDeleted = false,
                            Name = "ایلام",
                            ProvinceId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9737),
                            IsDeleted = false,
                            Name = "بوشهر",
                            ProvinceId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9740),
                            IsDeleted = false,
                            Name = "تهران",
                            ProvinceId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9742),
                            IsDeleted = false,
                            Name = "چهارمحال و بختیاری",
                            ProvinceId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9744),
                            IsDeleted = false,
                            Name = "خراسان جنوبی",
                            ProvinceId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9746),
                            IsDeleted = false,
                            Name = "خراسان رضوی",
                            ProvinceId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9748),
                            IsDeleted = false,
                            Name = "خراسان شمالی",
                            ProvinceId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9750),
                            IsDeleted = false,
                            Name = "خوزستان",
                            ProvinceId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9752),
                            IsDeleted = false,
                            Name = "زنجان",
                            ProvinceId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9754),
                            IsDeleted = false,
                            Name = "سمنان",
                            ProvinceId = 15
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9755),
                            IsDeleted = false,
                            Name = "سیستان و بلوچستان",
                            ProvinceId = 16
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9757),
                            IsDeleted = false,
                            Name = "فارس",
                            ProvinceId = 17
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9759),
                            IsDeleted = false,
                            Name = "قزوین",
                            ProvinceId = 18
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9761),
                            IsDeleted = false,
                            Name = "قم",
                            ProvinceId = 19
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9763),
                            IsDeleted = false,
                            Name = "کردستان",
                            ProvinceId = 20
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9765),
                            IsDeleted = false,
                            Name = "کرمان",
                            ProvinceId = 21
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9767),
                            IsDeleted = false,
                            Name = "کرمانشاه",
                            ProvinceId = 22
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9769),
                            IsDeleted = false,
                            Name = "کهگیلویه و بویراحمد",
                            ProvinceId = 23
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9770),
                            IsDeleted = false,
                            Name = "گلستان",
                            ProvinceId = 24
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9772),
                            IsDeleted = false,
                            Name = "گیلان",
                            ProvinceId = 25
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9774),
                            IsDeleted = false,
                            Name = "لرستان",
                            ProvinceId = 26
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9776),
                            IsDeleted = false,
                            Name = "مازندران",
                            ProvinceId = 27
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9778),
                            IsDeleted = false,
                            Name = "مرکزی",
                            ProvinceId = 28
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9780),
                            IsDeleted = false,
                            Name = "هرمزگان",
                            ProvinceId = 29
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9782),
                            IsDeleted = false,
                            Name = "همدان",
                            ProvinceId = 30
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(9783),
                            IsDeleted = false,
                            Name = "یزد",
                            ProvinceId = 31
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExpertId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("SignUpDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            FirstName = "علی",
                            IsDeleted = false,
                            LastName = "محمدی",
                            ProfileImage = "/UserAssets/img/customer/1.jpg",
                            SignUpDate = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(62)
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "سحر",
                            IsDeleted = false,
                            LastName = "رمضانی",
                            ProfileImage = "/UserAssets/img/customer/2.jpg",
                            SignUpDate = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(79)
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "مریم",
                            IsDeleted = false,
                            LastName = "اکبری",
                            ProfileImage = "/UserAssets/img/customer/3.jpg",
                            SignUpDate = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(81)
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(347),
                            IsDeleted = false,
                            Name = "آذربایجان شرقی"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(355),
                            IsDeleted = false,
                            Name = "آذربایجان غربی"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(357),
                            IsDeleted = false,
                            Name = "اردبیل"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(359),
                            IsDeleted = false,
                            Name = "اصفهان"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(361),
                            IsDeleted = false,
                            Name = "البرز"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(363),
                            IsDeleted = false,
                            Name = "ایلام"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(364),
                            IsDeleted = false,
                            Name = "بوشهر"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(366),
                            IsDeleted = false,
                            Name = "تهران"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(368),
                            IsDeleted = false,
                            Name = "چهارمحال و بختیاری"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(369),
                            IsDeleted = false,
                            Name = "خراسان جنوبی"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(371),
                            IsDeleted = false,
                            Name = "خراسان رضوی"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(373),
                            IsDeleted = false,
                            Name = "خراسان شمالی"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(375),
                            IsDeleted = false,
                            Name = "خوزستان"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(377),
                            IsDeleted = false,
                            Name = "زنجان"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(378),
                            IsDeleted = false,
                            Name = "سمنان"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(380),
                            IsDeleted = false,
                            Name = "سیستان و بلوچستان"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(382),
                            IsDeleted = false,
                            Name = "فارس"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(384),
                            IsDeleted = false,
                            Name = "قزوین"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(385),
                            IsDeleted = false,
                            Name = "قم"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(387),
                            IsDeleted = false,
                            Name = "کردستان"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(389),
                            IsDeleted = false,
                            Name = "کرمان"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(391),
                            IsDeleted = false,
                            Name = "کرمانشاه"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(393),
                            IsDeleted = false,
                            Name = "کهگیلویه و بویراحمد"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(394),
                            IsDeleted = false,
                            Name = "گلستان"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(396),
                            IsDeleted = false,
                            Name = "گیلان"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(398),
                            IsDeleted = false,
                            Name = "لرستان"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(400),
                            IsDeleted = false,
                            Name = "مازندران"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(402),
                            IsDeleted = false,
                            Name = "مرکزی"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(403),
                            IsDeleted = false,
                            Name = "هرمزگان"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(405),
                            IsDeleted = false,
                            Name = "همدان"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 364, DateTimeKind.Local).AddTicks(407),
                            IsDeleted = false,
                            Name = "یزد"
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.ServiceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerDescription")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExpertId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceRequests");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1698),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "دکوراسیون ساختمان"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1708),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "تاسیسات ساختمان"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1710),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "وسایل نقلیه"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1712),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "اسباب کشی و باربری"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1715),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "لوازم خانگی"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1717),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "خدمات اداری"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1719),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "دیجیتال و نرم افزار"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1722),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "نظافت و بهداشت"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(1724),
                            Description = "لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم لورم ایپسوم ",
                            Image = "",
                            IsDeleted = false,
                            Title = "پزشکی و سلامت"
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Expert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("SignUpDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.HasIndex("AdminId");

                    b.ToTable("Experts");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpertDescription")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceRequestId")
                        .HasColumnType("int");

                    b.Property<double>("SuggestedPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ExpertId");

                    b.HasIndex("ServiceRequestId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Image")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3326),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کاشی و سرامیک",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3339),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "بنایی ساختمان",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3341),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "گچ کاری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3344),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کارگر ساده",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3346),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "بازسازی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3349),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کانال سازی و دریچه کولر",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3351),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "عایق کاری و ایزوگام",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3353),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سنگ کاری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3355),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سیمان کاری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3357),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نقاشی ساختمان",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3359),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کابینت",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3361),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کاغذ دیواری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3363),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نجاری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3365),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کفسابی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3367),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کفپوش",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3369),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "پارکت",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3371),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "لمینت",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3373),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "موکت",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3375),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "دوخت پرده",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3377),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "مبلمان",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3379),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سرویس خواب",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3382),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سقف کاذب",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3384),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نمای ساختمان",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3386),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تعمیر نمای ساختمان",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3388),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "شیشه بری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3390),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "توری پنجره",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3392),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نصب درب چوبی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3395),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "جوشکاری و آهنگری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3397),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کلید سازی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3398),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "گل و گیاه آپارتمانی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3401),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "باغبانی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3403),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کولر آبی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3404),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "کولر گازی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3406),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "پکیج",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3408),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "آبگرمکن",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3410),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "فن‌کویل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3412),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "چیلر و هواساز",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3414),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "رادیاتور شوفاژ",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3416),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "موتورخانه",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3419),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "بخاری گازی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3421),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "شومینه گازی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3423),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "لوله کشی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3424),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "شیرآلات ساختمانی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3426),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "لوله بازکنی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3428),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "توالت فرنگی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3430),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "پمپ آب",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3432),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "لوله‌ کشی گاز",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3434),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تخلیه چاه",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3436),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "فلاش تانک",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3438),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "روشویی و دست‌شور",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3440),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سینک ظرفشویی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3442),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "برق کاری ساختمان",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3444),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "آیفون تصویری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3447),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "لوستر",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3449),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "دوربین مداربسته",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3451),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "هواکش",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3453),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "آنتن دیجیتال",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3455),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نورپردازی ساختمان",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3457),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تایمر مشاعات",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3459),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "جعبه فیوز",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3461),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "داکت کشی و ترانکینگ",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3463),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سیم کشی تلفن",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3465),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سیم کشی سانترال",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3467),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "صافکاری و نقاشی خودرو",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3469),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تعویض روغن",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3471),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تعمیر خودرو",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3473),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "برق خودرو",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3475),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "اسباب کشی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3477),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "حمل بار",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 70,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3479),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "یخچال",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 71,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3481),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "ماشین ظرفشویی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 72,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3483),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "مایکروفر",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 73,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3486),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "اجاق برقی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 74,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3488),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "هود آشپزخانه",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 75,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3520),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "اجاق گاز",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 76,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3523),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "ماشین لباسشویی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 77,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3525),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "اتو بخار",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 78,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3527),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "اتو پرس",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 79,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3529),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "جاروبرقی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 80,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3531),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "جارو شارژی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 81,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3533),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تلویزیون",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 82,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3535),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سینما خانگی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 83,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3537),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "دستگاه کپی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 84,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3539),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "فکس",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 85,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3541),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "پرینتر",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 86,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3543),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "پارتیشن اداری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 97,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3544),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تعمیر موبایل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 98,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3546),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تعمیر لپ‌تاپ",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 99,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3548),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تعمیر سخت افزار کامپیوتر",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 100,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3551),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نصب نرم افزار",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 101,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3553),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نصب ویندوز در محل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 102,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3555),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "تعمیر مودم اینترنت",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 103,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3557),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "راه‌ اندازی شبکه کامپیوتری",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 87,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3559),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نظافت دوره ای",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 88,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3561),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نظافت منزل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 89,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3563),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نظافت ساختمان",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 90,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3565),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نظافت شرکت و اداره",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 91,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3567),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "ضدعفونی منزل و محل کار",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 92,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3569),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "خشکشویی آنلاین",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 93,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3571),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "خشکشویی پرده",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 94,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3573),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "قالیشویی آنلاین",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 95,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3575),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "مبل شویی",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 96,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3577),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "سمپاشی منازل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 104,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3579),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "آزمایش در محل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 105,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3581),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "پرستاری در منزل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 106,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3583),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "ویزیت پزشک در منزل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 107,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3585),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "نوار قلب در محل",
                            WorkExperience = 0
                        },
                        new
                        {
                            Id = 108,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 5, 21, 0, 51, 49, 363, DateTimeKind.Local).AddTicks(3587),
                            Description = "",
                            Image = "",
                            IsDeleted = false,
                            Title = "فیزیوتراپی در منزل",
                            WorkExperience = 0
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("SelfRate")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ExpertId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ExpertService", b =>
                {
                    b.Property<int>("ExpertsId")
                        .HasColumnType("int");

                    b.Property<int>("ServicesId")
                        .HasColumnType("int");

                    b.HasKey("ExpertsId", "ServicesId");

                    b.HasIndex("ServicesId");

                    b.ToTable("ExpertService");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("App.Domain.Core.Admin.Entities.ApplicationUser", b =>
                {
                    b.HasOne("App.Domain.Core.Admin.Entities.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("App.Domain.Core.Customer.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("App.Domain.Core.Expert.Entities.Expert", "Expert")
                        .WithMany()
                        .HasForeignKey("ExpertId");

                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Address", b =>
                {
                    b.HasOne("App.Domain.Core.Customer.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Customer.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.City", b =>
                {
                    b.HasOne("App.Domain.Core.Customer.Entities.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Comment", b =>
                {
                    b.HasOne("App.Domain.Core.Admin.Entities.Admin", "Admin")
                        .WithMany("Comments")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Customer.Entities.Customer", "Customer")
                        .WithMany("Comments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Expert.Entities.Expert", "Expert")
                        .WithMany("Comments")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Customer", b =>
                {
                    b.HasOne("App.Domain.Core.Admin.Entities.Admin", null)
                        .WithMany("Customers")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.ServiceRequest", b =>
                {
                    b.HasOne("App.Domain.Core.Customer.Entities.Customer", "Customer")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Expert.Entities.Expert", "Expert")
                        .WithMany("DonedServiceRequests")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Expert.Entities.Service", "Service")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Expert");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Expert", b =>
                {
                    b.HasOne("App.Domain.Core.Customer.Entities.Address", "Address")
                        .WithOne("Expert")
                        .HasForeignKey("App.Domain.Core.Expert.Entities.Expert", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("App.Domain.Core.Admin.Entities.Admin", null)
                        .WithMany("Experts")
                        .HasForeignKey("AdminId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Proposal", b =>
                {
                    b.HasOne("App.Domain.Core.Expert.Entities.Expert", "Expert")
                        .WithMany("Proposals")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Customer.Entities.ServiceRequest", "ServiceRequest")
                        .WithMany("Proposals")
                        .HasForeignKey("ServiceRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Expert");

                    b.Navigation("ServiceRequest");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Service", b =>
                {
                    b.HasOne("App.Domain.Core.Expert.Entities.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Skill", b =>
                {
                    b.HasOne("App.Domain.Core.Expert.Entities.Expert", "Expert")
                        .WithMany("Skills")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("ExpertService", b =>
                {
                    b.HasOne("App.Domain.Core.Expert.Entities.Expert", null)
                        .WithMany()
                        .HasForeignKey("ExpertsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Expert.Entities.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("App.Domain.Core.Admin.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("App.Domain.Core.Admin.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Admin.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("App.Domain.Core.Admin.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Core.Admin.Entities.Admin", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Customers");

                    b.Navigation("Experts");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Address", b =>
                {
                    b.Navigation("Expert");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Comments");

                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("App.Domain.Core.Customer.Entities.ServiceRequest", b =>
                {
                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Category", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Expert", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("DonedServiceRequests");

                    b.Navigation("Proposals");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("App.Domain.Core.Expert.Entities.Service", b =>
                {
                    b.Navigation("ServiceRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
